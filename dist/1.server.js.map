{"version":3,"sources":["webpack:///./src/routes/Counter/containers/CounterContainer.js","webpack:///./src/routes/Counter/modules/counter.js","webpack:///./~/babel-runtime/helpers/defineProperty.js","webpack:///./src/components/Counter/index.js","webpack:///./src/components/Counter/Counter.js","webpack:///./src/components/Counter/Counter.scss?c559","webpack:///./src/components/Counter/Counter.scss"],"names":["mapDispatchToProps","increment","doubleAsync","mapStateToProps","state","counter","counterReducer","COUNTER_INCREMENT","value","type","payload","dispatch","getState","resolve","setTimeout","actions","ACTION_HANDLERS","action","initialState","handler","Counter","props","counterContainer","propTypes","PropTypes","number","isRequired","func"],"mappings":"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","file":"1.server.js","sourcesContent":["import { connect } from 'react-redux'\nimport { increment, doubleAsync } from '../modules/counter'\n\n/*  This is a container component. Notice it does not contain any JSX,\n    nor does it import React. This component is **only** responsible for\n    wiring in the actions and state necessary to render a presentational\n    component - in this case, the counter:   */\n\nimport Counter from 'components/Counter'\n\n/*  Object of action creators (can also be function that returns object).\n    Keys will be passed as props to presentational components. Here we are\n    implementing our wrapper around increment; the component doesn't care   */\n\nconst mapDispatchToProps = {\n  increment: () => increment(1),\n  doubleAsync\n}\n\nconst mapStateToProps = (state) => ({\n  counter: state.counter\n})\n\n/*  Note: mapStateToProps is where you should use `reselect` to create selectors, ie:\n\n    import { createSelector } from 'reselect'\n    const counter = (state) => state.counter\n    const tripleCount = createSelector(counter, (count) => count * 3)\n    const mapStateToProps = (state) => ({\n      counter: tripleCount(state)\n    })\n\n    Selectors can compute derived data, allowing Redux to store the minimal possible state.\n    Selectors are efficient. A selector is not recomputed unless one of its arguments change.\n    Selectors are composable. They can be used as input to other selectors.\n    https://github.com/reactjs/reselect    */\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter)\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/Counter/containers/CounterContainer.js","// ------------------------------------\n// Constants\n// ------------------------------------\nexport const COUNTER_INCREMENT = 'COUNTER_INCREMENT'\n\n// ------------------------------------\n// Actions\n// ------------------------------------\nexport function increment (value = 1) {\n  return {\n    type: COUNTER_INCREMENT,\n    payload: value\n  }\n}\n\n/*  This is a thunk, meaning it is a function that immediately\n    returns a function for lazy evaluation. It is incredibly useful for\n    creating async actions, especially when combined with redux-thunk!\n\n    NOTE: This is solely for demonstration purposes. In a real application,\n    you'd probably want to dispatch an action of COUNTER_DOUBLE and let the\n    reducer take care of this logic.  */\n\nexport const doubleAsync = () => {\n  return (dispatch, getState) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        dispatch(increment(getState().counter))\n        resolve()\n      }, 200)\n    })\n  }\n}\n\nexport const actions = {\n  increment,\n  doubleAsync\n}\n\n// ------------------------------------\n// Action Handlers\n// ------------------------------------\nconst ACTION_HANDLERS = {\n  [COUNTER_INCREMENT]: (state, action) => state + action.payload\n}\n\n// ------------------------------------\n// Reducer\n// ------------------------------------\nconst initialState = 0\nexport default function counterReducer (state = initialState, action) {\n  const handler = ACTION_HANDLERS[action.type]\n\n  return handler ? handler(state, action) : state\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/Counter/modules/counter.js","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/defineProperty.js\n// module id = 321\n// module chunks = 1 2","import Counter from './Counter'\n\nexport default Counter\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Counter/index.js","import React from 'react'\nimport Helmet from 'react-helmet'\nimport classes from './Counter.scss'\n\nexport const Counter = (props) => (\n  <div>\n    <Helmet title='Counter' />\n    <h2 className={classes.counterContainer}>\n      Counter:\n      {' '}\n      <span className={classes['counter--green']}>\n        {props.counter}\n      </span>\n    </h2>\n    <button className='btn btn-default' onClick={props.increment}>\n      Increment\n    </button>\n    {' '}\n    <button className='btn btn-default' onClick={props.doubleAsync}>\n      Double (Async)\n    </button>\n  </div>\n)\n\nCounter.propTypes = {\n  counter: React.PropTypes.number.isRequired,\n  doubleAsync: React.PropTypes.func.isRequired,\n  increment: React.PropTypes.func.isRequired\n}\n\nexport default Counter\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Counter/Counter.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?sourceMap&-minimize&modules&importLoaders=1&localIdentName=[name]__[local]___[hash:base64:5]!../../../node_modules/postcss-loader/index.js!../../../node_modules/sass-loader/index.js?sourceMap!./Counter.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\nif (typeof window === 'undefined') {\n   require(\"!../../../node_modules/simple-universal-style-loader/universal.js\").addStyles(content, {});\n} else {\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/simple-universal-style-loader/addStyles.js\")(content, {});\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js?sourceMap&-minimize&modules&importLoaders=1&localIdentName=[name]__[local]___[hash:base64:5]!../../../node_modules/postcss-loader/index.js!../../../node_modules/sass-loader/index.js?sourceMap!./Counter.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js?sourceMap&-minimize&modules&importLoaders=1&localIdentName=[name]__[local]___[hash:base64:5]!../../../node_modules/postcss-loader/index.js!../../../node_modules/sass-loader/index.js?sourceMap!./Counter.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Counter/Counter.scss\n// module id = 324\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".Counter__counter___8Lvk1{font-weight:700}.Counter__counter--green___30k-8{color:#19c819}.Counter__counterContainer___1Ev3K{margin:1em auto}\", \"\", {\"version\":3,\"sources\":[\"/./src/components/Counter/src/components/Counter/Counter.scss\"],\"names\":[],\"mappings\":\"AAAA,0BACE,eAAkB,CACnB,iCAGmB,aACR,CACX,mCAGC,eAAiB,CAClB\",\"file\":\"Counter.scss\",\"sourcesContent\":[\".counter {\\n  font-weight: bold;\\n}\\n\\n.counter--green {\\n  composes: counter;\\n  color: rgb(25,200,25);\\n}\\n\\n.counterContainer {\\n  margin: 1em auto;\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\nexports.locals = {\n\t\"counter\": \"Counter__counter___8Lvk1\",\n\t\"counter--green\": \"Counter__counter--green___30k-8 Counter__counter___8Lvk1\",\n\t\"counterContainer\": \"Counter__counterContainer___1Ev3K\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap&-minimize&modules&importLoaders=1&localIdentName=[name]__[local]___[hash:base64:5]!./~/postcss-loader!./~/sass-loader?sourceMap!./src/components/Counter/Counter.scss\n// module id = 325\n// module chunks = 1"],"sourceRoot":""}